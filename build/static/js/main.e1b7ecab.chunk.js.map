{"version":3,"sources":["Components/Header/Find/Find.jsx","Components/Header/Lingua/Lingua.jsx","Components/Header/Header.jsx","Components/img/two-way-cross.png","Components/Main.jsx","Components/img/priscilla-du-preez.jpg","Components/img/heylagostechie.jpg","Components/img/alexis-brown-omea.jpg","Components/About.jsx","Components/data.js","Components/Team.jsx","Components/Footer.jsx","Components/userAccount/layout/Alert.jsx","Components/userAccount/layout/ButtonMU.jsx","Components/userAccount/forms/LoginForm.jsx","Components/userAccount/Login.jsx","Components/userAccount/selector/RegionCountrySelector.jsx","Components/userAccount/asset/sign-up.png","Components/userAccount/upload-edit/AvatarUploader.jsx","Components/userAccount/forms/RegistrationForm.jsx","Components/userAccount/Register.jsx","Components/userAccount/forms/ResetPWForm.jsx","Components/userAccount/asset/password-forgot.png","Components/userAccount/ResetPW.jsx","App.jsx","index.jsx"],"names":["Find","props","state","country","region","val","this","setState","className","type","id","data-bs-toggle","aria-expanded","aria-labelledby","href","value","onChange","selectCountry","selectRegion","Component","Login","role","to","aria-haspopup","Header","searchOffer","APIKey","process","REACT_APP_CLIENT_ID","APISecret","REACT_APP_CLIENT_SECRET","console","log","fetch","then","res","json","data","setUsers","items","Main","src","Logo","alt","target","rel","About","CardDeck","Card","Body","Title","Text","team","image","name","title","quote","Team","useState","people","index","setIndex","useEffect","slider","setInterval","oldIndex","length","clearInterval","map","person","personIndex","position","onClick","Footer","MyAlert","alertHeading","alertMessage","alertType","Alert","variant","Heading","ButtonMU","buttonVariant","buttonColor","buttonSize","Button","color","size","library","add","faGoogle","faFacebook","faTwitter","LoginForm","alertEM","alertPW","onSubmit","submitHandler","placeholder","email","changeEmail","required","passWord","changePW","checked","rememberMe","changeRM","aria-label","icon","style","setEmail","setPassWord","setRememberMe","setAlertEM","setAlertPW","saveOnLocal","JSON","parse","localStorage","getItem","setItem","stringify","e","preventDefault","test","setTimeout","RegionCountrySelector","setParentCountry","setParentRegion","classes","AvatarUploader","width","height","onCrop","onClose","onBeforeFileLoad","preview","savedImage","RegistrationForm","action","firstName","changeFirstName","lastName","changeLastName","changeCountry","changeRegion","userName","changeUserName","changePassWord","confirmPW","changeConfirmPW","alertPWCheck","Register","setFirstName","setLastName","setUserName","setConfirmPW","setCountry","setRegion","setPreview","setSavedImage","setAlertPWCheck","isEmValid","isPwValid","files","alert","ResetPWForm","ResetPW","App","images","Image2","Image3","Image4","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e1b7ecab.chunk.js","sourcesContent":["import { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport React, { Component } from \"react\";\nimport { CountryDropdown, RegionDropdown } from \"react-country-region-selector\";\n\nimport \"./Find.scss\";\n\nclass Find extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { country: \"\", region: \"\" };\n  }\n\n  selectCountry(val) {\n    this.setState({ country: val });\n  }\n\n  selectRegion(val) {\n    this.setState({ region: val });\n  }\n\n  render() {\n    const { country, region } = this.state;\n    return (\n      <div className=\"form\">\n        <div className=\"menu\">\n          <button\n            className=\"btnCat dropdown-toggle\"\n            type=\"button\"\n            id=\"dropdownMenuButton1\"\n            data-bs-toggle=\"dropdown\"\n            aria-expanded=\"false\"\n          >\n            I can offer\n          </button>\n          <ul className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton1\">\n            <li>\n              <a className=\"dropdown-item\" href=\"#\">\n                Linguistics\n              </a>\n            </li>\n          </ul>\n        </div>\n        <div className=\"menu\">\n          <button\n            className=\"btnCat dropdown-toggle\"\n            type=\"button\"\n            id=\"dropdownMenuButton1\"\n            data-bs-toggle=\"dropdown\"\n            aria-expanded=\"false\"\n          >\n            I'm looking for\n          </button>\n          <ul\n            className=\"dropdown-menu cc\"\n            aria-labelledby=\"dropdownMenuButton1\"\n          >\n            <li>\n              <a className=\"dropdown-item\" href=\"#\">\n                Art\n              </a>\n            </li>\n          </ul>\n        </div>\n        <div className=\"menu\">\n          <CountryDropdown\n            value={country}\n            onChange={(val) => this.selectCountry(val)}\n          />\n\n          <RegionDropdown\n            country={country}\n            value={region}\n            onChange={(val) => this.selectRegion(val)}\n          />\n        </div>\n\n        <div className=\"btnFindDiv\">\n          <button type=\"submit\" value=\"search\" className=\"btnFind\">\n            Find\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\nexport default Find;\n","import { Link } from \"react-router-dom\";\n\nimport \"./Lingua.scss\";\n\nfunction Login() {\n  return (\n    <div className=\"btn-group\" role=\"group\">\n      <Link to=\"./login\">\n        <button className=\"btn log\">\n          <a href=\"#\">Login</a>\n        </button>\n      </Link>\n      <Link to=\"./register\">\n        <button className=\"btn log\">\n          <a href=\"#\">Register</a>\n        </button>\n      </Link>\n      <a\n        id=\"btnGroupDrop\"\n        type=\"button\"\n        className=\"dropdown-toggle\"\n        data-bs-toggle=\"dropdown\"\n        aria-haspopup=\"true\"\n        aria-expanded=\"false\"\n      >\n        EN\n      </a>\n      <div className=\"dropdown-menu linguaMenu\" aria-labelledby=\"btnGroupDrop1\">\n        <a className=\"dropdown-item\" href=\"#\">\n          DE\n        </a>\n        <a className=\"dropdown-item\" href=\"#\">\n          PT\n        </a>\n        <a className=\"dropdown-item\" href=\"#\">\n          ES\n        </a>\n        <a className=\"dropdown-item\" href=\"#\">\n          ZH\n        </a>\n      </div>\n    </div>\n  );\n}\nexport default Login;\n","import \"./Header.scss\";\nimport Find from \"./Find/Find\";\nimport Lingua from \"./Lingua/Lingua\";\n\nfunction Header() {\n  const searchOffer = (value) => {\n    const APIKey = process.env.REACT_APP_CLIENT_ID;\n    const APISecret = process.env.REACT_APP_CLIENT_SECRET;\n    console.log(APIKey);\n    fetch(\n      `https://api.github.com/search/users?q=${value}&client_id=${APIKey}&client_secret=${APISecret}`\n    )\n      .then((res) => res.json())\n      .then((data) => setUsers(data.items));\n  };\n\n  return (\n    <>\n      <div className=\"find\">\n        <Find\n          searchOffer={searchOffer}\n          /* giveOffer={giveOffer}\n          searchCity={searchCity} */\n        />\n        <Lingua />\n      </div>\n    </>\n  );\n}\nexport default Header;\n","export default __webpack_public_path__ + \"static/media/two-way-cross.d5fe7cb1.png\";","import React from \"react\";\nimport \"./Main.scss\";\nimport Logo from \"./img/two-way-cross.png\";\n\nfunction Main() {\n  return (\n    <div id=\"home\">\n      <div>\n        <main className=\"main\">\n          <h1>\n            Two\n            <span>\n              <img src={Logo} className=\"logo\" alt=\"\" />\n            </span>\n            Way Street\n          </h1>\n          <p>Service Exchange Platform - get new skills for FREE!!</p>\n          <button\n            className=\"btnJoinFind\"\n            href=\"https://reactjs.org\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Join\n          </button>\n        </main>\n      </div>\n    </div>\n  );\n}\n\nexport default Main;\n","export default __webpack_public_path__ + \"static/media/priscilla-du-preez.7f7056bf.jpg\";","export default __webpack_public_path__ + \"static/media/heylagostechie.42c2799f.jpg\";","export default __webpack_public_path__ + \"static/media/alexis-brown-omea.a2d96840.jpg\";","import React from \"react\";\nimport \"./Section.scss\";\nimport { Card, CardDeck } from \"react-bootstrap\";\nimport { FaRegCompass, FaMedapps } from \"react-icons/fa\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nconst About = () => {\n  return (\n    <div id=\"aboutUs\" className=\"about\">\n      {/* <h5> <span>/ </span> About Us</h5> */}\n      <CardDeck className=\"card-deck\">\n        {/* <Card.Header style={{fontSize:'3rem', color:'#333',textAlign:'center'}}>/ About Us</Card.Header> */}\n        <Card className=\"card\">\n          <Card.Body className=\"card-body\">\n            <FaRegCompass className=\"icons\" />\n            <Card.Title className=\"card-title\">\n              {/* <span>/</span> */}Mission\n            </Card.Title>\n            <Card.Text className=\"card-text\">\n              Lorem, ipsum dolor sit amet consectetur adipisicing elit. Nihil,\n              sapiente soluta necessitatibus vel officiis natus neque doloribus,\n              deleniti ullam optio voluptatibus dolores nostrum aut et\n              recusandae quaerat incidunt quidem nesciunt. Iusto aliquam modi\n              nulla voluptate repellendus voluptatibus perferendis eos ea ullam\n              molestias ex beatae fugiat, magnam non dolorem dicta, illo ipsum\n              doloribus dolore id amet! Nobis dolorum ipsa adipisci at?\n            </Card.Text>\n          </Card.Body>\n        </Card>\n\n        <Card className=\"card\">\n          <Card.Body className=\"card-body\">\n            <FaMedapps className=\"icons\" />\n\n            <Card.Title className=\"card-title\">\n              {/* <span>/</span> */}Vision\n            </Card.Title>\n            <Card.Text className=\"card-text\">\n              Lorem, ipsum dolor sit amet consectetur adipisicing elit. Nihil,\n              sapiente soluta necessitatibus vel officiis natus neque doloribus,\n              deleniti ullam optio voluptatibus dolores nostrum aut et\n              recusandae quaerat incidunt quidem nesciunt. Iusto aliquam modi\n              nulla voluptate repellendus voluptatibus perferendis eos ea ullam\n              molestias ex beatae fugiat, magnam non dolorem dicta, illo ipsum\n              doloribus dolore id amet! Nobis dolorum ipsa adipisci at?\n            </Card.Text>\n          </Card.Body>\n        </Card>\n      </CardDeck>\n    </div>\n  );\n};\n\nexport default About;\n","const team = [\n  {\n    id: 1,\n    image:\n      \"https://res.cloudinary.com/dbiqsk9jz/image/upload/v1612429774/samples/people/bicycle.jpg\",\n    name: \"Maja Marek\",\n    title: \"content manager\",\n    quote:\n      \"Life imposes things on you that you can’t control, but you still have the choice of how you’re going to live through this.\",\n  },\n  {\n    id: 2,\n    image:\n      \"https://res.cloudinary.com/dbiqsk9jz/image/upload/v1612429770/samples/people/smiling-man.jpg\",\n    name: \"Ion Chircu\",\n    title: \"web-developer\",\n    quote:\n      \"Your work is going to fill a large part of your life, and the only way to be truly satisfied is to do what you believe is great work. And the only way to do great work is to love what you do. If you haven’t found it yet, keep looking. Don’t settle. As with all matters of the heart, you’ll know when you find it.\",\n  },\n  {\n    id: 3,\n    image:\n      \"https://res.cloudinary.com/dbiqsk9jz/image/upload/v1612429774/samples/people/bicycle.jpg\",\n    name: \"Nargiza Rysmendieva\",\n    title: \"content manager\",\n    quote:\n      \"Life imposes things on you that you can’t control, but you still have the choice of how you’re going to live through this.\",\n  },\n  {\n    id: 4,\n    image:\n      \"https://res.cloudinary.com/dbiqsk9jz/image/upload/v1612429774/samples/people/bicycle.jpg\",\n    name: \"Ljiljana Bagaric\",\n    title: \"content manager\",\n    quote:\n      \"Life imposes things on you that you can’t control, but you still have the choice of how you’re going to live through this.\",\n  },\n  {\n    id: 5,\n    image:\n      \"https://res.cloudinary.com/dbiqsk9jz/image/upload/v1612429774/samples/people/bicycle.jpg\",\n    name: \"Shih-chen Chao\",\n    title: \"content manager\",\n    quote:\n      \"Life imposes things on you that you can’t control, but you still have the choice of how you’re going to live through this.\",\n  },\n];\n\nexport default team;\n","import { useState, useEffect } from \"react\";\nimport team from \"./data\";\nimport \"./Team.scss\";\nimport { FiChevronRight, FiChevronLeft } from \"react-icons/fi\";\n\nconst Team = () => {\n  const [people, setPeople] = useState(team);\n  const [index, setIndex] = useState(0);\n\n  const prevSlide = () => {\n    setIndex((oldIndex) => {\n      let index = oldIndex - 1;\n      if (index < 0) {\n        index = people.length - 1;\n      }\n      return index;\n    });\n  };\n  const nextSlide = () => {\n    setIndex((oldIndex) => {\n      let index = oldIndex + 1;\n      if (index > people.length - 1) {\n        index = 0;\n      }\n      return index;\n    });\n  };\n\n  useEffect(() => {\n    let slider = setInterval(() => {\n      setIndex((oldIndex) => {\n        let index = oldIndex + 1;\n        if (index > people.length - 1) {\n          index = 0;\n        }\n        return index;\n      });\n    }, 5000);\n    return () => {\n      clearInterval(slider);\n    };\n  }, [index]);\n\n  return (\n    <section className=\"team section\">\n      <div id=\"contact\" className=\"title\">\n        <h2>our team</h2>\n      </div>\n      <div className=\"section-center\">\n        {people.map((person, personIndex) => {\n          const { id, image, name, title, quote } = person;\n          let position = \"nextSlide\";\n          if (personIndex === index) {\n            position = \"activeSlide\";\n          }\n          if (\n            personIndex === index - 1 ||\n            (index === 0 && personIndex === people.length - 1)\n          ) {\n            position = \"lastIndex\";\n          }\n\n          return (\n            <article key={id} className={position}>\n              <img src={image} alt={name} className=\"person-img\" />\n              <h4>{name}</h4>\n              <p className=\"title\">{title}</p>\n              <p className=\"text\">{quote}</p>\n            </article>\n          );\n        })}\n        <button className=\"prev\">\n          <FiChevronLeft onClick={prevSlide} />\n        </button>\n        <button className=\"next\">\n          <FiChevronRight onClick={nextSlide} />\n        </button>\n      </div>\n    </section>\n  );\n};\n\nexport default Team;\n","import React from \"react\";\nimport \"./Footer.scss\";\n\nconst Footer = () => {\n  return (\n    <div className=\"footer\">\n      <ul>\n        <li className=\"btn btnFooter\">\n          <a href=\"#home\">Home</a>\n        </li>\n        <li className=\"btn btnFooter\">\n          <a href=\"#aboutUs\">About us</a>\n        </li>\n        <li className=\"btn btnFooter\">\n          <a href=\"#contact\">Contact us</a>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nexport default Footer;\n","//https://react-bootstrap.github.io/components/alerts/\n//import Alert module from react-bootstrap\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Alert } from 'react-bootstrap';\n\nconst MyAlert = ({alertHeading, alertMessage, alertType}) => {\n        return (\n        <Alert variant={ alertType } >\n        <Alert.Heading>{ alertHeading }</Alert.Heading>\n        <p>\n         { alertMessage }\n        </p>\n      </Alert>\n    )    \n}\n\nexport default MyAlert\n","//install material-ui to use Button \n//https://material-ui.com/getting-started/installation/\n//npm install @material-ui/core\n\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Button } from '@material-ui/core';\n\nexport const ButtonMU = ( {buttonVariant, buttonColor, buttonSize} ) => {\n    return (\n        <div>\n          <Link to='/'><Button variant={ buttonVariant } color= { buttonColor } size={ buttonSize} > I will join/ register later! </Button></Link> \n        </div>\n    )\n}\n\nexport default ButtonMU\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport LoginImg from \"../asset/login.png\";\n\nimport MyAlert from \"../layout/Alert\";\nimport ButtonMU from \"../layout/ButtonMU\";\nimport \"../userAccount.css\";\n\n//import FontAweSomeIcon and library modules, then set up your own icon library to avoid overloading with other unused icons\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport {\n  //faGithub,\n  faGoogle,\n  faFacebook,\n  faTwitter,\n} from \"@fortawesome/free-brands-svg-icons\";\n\nlibrary.add(\n  //faGithub,\n  faGoogle,\n  faFacebook,\n  faTwitter\n);\n\nconst LoginForm = (props) => {\n  return (\n    <>\n      <div className=\"back\">\n        <div className=\"card div-center\">\n          <div className=\"container-lg fluid\">\n            <div className=\"card-body\">\n              <ButtonMU\n                buttonVariant={\"outlined\"}\n                buttonColor={\"primary\"}\n                buttonSize={\"large\"}\n              />\n              {/* <br />\n            <img className=\"image-center\" src={ LoginImg } alt=\"login\" /> */}\n              <br />\n              {props.alertEM && (\n                <MyAlert\n                  alertType={\"warning\"}\n                  alertHeading={\"Error!\"}\n                  alertMessage={\"Please Enter A Valid Email \"}\n                />\n              )}\n              {props.alertPW && (\n                <MyAlert\n                  alertType={\"danger\"}\n                  alertHeading={\"Incorrect!\"}\n                  alertMessage={\"Please Enter A Valid Password \"}\n                />\n              )}\n\n              <form onSubmit={props.submitHandler}>\n                <fieldset>\n                  <div className=\"form-row\">\n                    <div className=\"form-group col-lg-12\">\n                      <label>Your Email</label>\n\n                      <input\n                        type=\"text\"\n                        name=\"email\"\n                        placeholder=\"email\"\n                        className=\"form-control\"\n                        value={props.email}\n                        onChange={props.changeEmail}\n                        required\n                      />\n                    </div>\n                    <div className=\"form-group col-lg-12\">\n                      <label>Your Password</label>\n                      <br />\n                      <input\n                        type=\"password\"\n                        name=\"passWord\"\n                        placeholder=\"password\"\n                        className=\"form-control\"\n                        value={props.passWord}\n                        onChange={props.changePW}\n                        required\n                      />\n                    </div>\n                  </div>\n\n                  <div className=\"form-check form-group col-lg-12 ml-3\">\n                    <input\n                      type=\"checkbox\"\n                      className=\"form-check-input\"\n                      checked={props.rememberMe}\n                      //id=\"flexCheckDefault\"\n                      onChange={props.changeRM}\n                      //in theory onClick should be used but Chrome prefers onChange here\n                    />\n                    <label> Remember Me </label>\n                  </div>\n\n                  <div className=\"for-check form-group col-lg-12\">\n                    <button type=\"submit\" className=\"btn btn-primary btn-lg\">\n                      Login\n                    </button>\n                  </div>\n\n                  <h2 className=\"form-group col-lg-12 mt-3 text-center\">\n                    Or you can log in\n                  </h2>\n\n                  <div className=\"col-lg-12 mt-3\" aria-label=\"buttonExample\">\n                    <button type=\"button\" className=\"btn btn-primary col-4\">\n                      <a href=\"#\"></a>\n                      <FontAwesomeIcon\n                        icon={[\"fab\", \"google\"]}\n                        size=\"2x\"\n                      />{\" \"}\n                      with Google\n                    </button>\n                    <button type=\"button\" className=\"btn btn-warning col-4\">\n                      <a href=\"#\"></a>\n                      <FontAwesomeIcon icon={[\"fab\", \"facebook\"]} size=\"2x\" />\n                      with Facebook\n                    </button>\n                    <button\n                      type=\"button\"\n                      className=\"btn btn-secondary col-4\"\n                      style={{ color: \"white\" }}\n                    >\n                      <a href=\"#\"></a>\n                      <FontAwesomeIcon icon={[\"fab\", \"twitter\"]} size=\"2x\" />\n                      with Twitter\n                    </button>\n                  </div>\n\n                  <div className=\"form-group col-lg-12 mt-5\">\n                    <Link to=\"/reset_password\">\n                      <button\n                        type=\"button\"\n                        className=\"btn btn-primary btn-lg mx-auto\"\n                      >\n                        Forgot Password?\n                      </button>\n                    </Link>\n                    <Link to=\"/register\">\n                      <button\n                        type=\"button\"\n                        className=\"btn btn-primary btn-lg mx-auto\"\n                      >\n                        {\" \"}\n                        Create an Account!\n                      </button>\n                    </Link>\n                    <Link to=\"/\">\n                      <button\n                        type=\"button\"\n                        className=\"btn btn-primary btn-lg mx-auto\"\n                      >\n                        {\" \"}\n                        Back to Homepage\n                      </button>\n                    </Link>\n                  </div>\n                </fieldset>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default LoginForm;\n","//installed fontawesome package of\n//npm i --save @fortawesome/fontawesome-svg-core\n//npm install --save @fortawesome/free-solid-svg-icons\n//npm install --save @fortawesome/react-fontawesome\n//npm install --save @fortawesome/free-brands-svg-icons\n\n//https://fontawesome.com/how-to-use/on-the-web/using-with/react\n\nimport  { useState } from 'react';\nimport LoginForm from './forms/LoginForm'\n// import { Link } from \"react-router-dom\";\n// import LoginImg from './asset/login.png';\n\n// import  MyAlert  from './layout/Alert';\n// import ButtonMU from './layout/ButtonMU'\n// import \"../userAccount/userAccount.css\"\n\n// //import FontAweSomeIcon and library modules, then set up your own icon library to avoid overloading with other unused icons\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n// import { library } from '@fortawesome/fontawesome-svg-core';\n// import {\n//     //faGithub,\n//     faGoogle,\n//     faFacebook,\n//     faTwitter\n//   } from '@fortawesome/free-brands-svg-icons';\n\n//   library.add(\n//     //faGithub,\n//     faGoogle,\n//     faFacebook,\n//     faTwitter\n//   );\n\nconst Login = () => {\n    const [email, setEmail] = useState (\"\");\n    const [passWord, setPassWord] = useState (\"\"); \n    const [rememberMe, setRememberMe] = useState (false); \n    const [alertEM, setAlertEM] = useState (false);  \n    const [alertPW, setAlertPW] = useState (false);\n\n    const submitHandler = (e)=> {\n        e.preventDefault();\n        \n        const emailValidator = /^[a-zA-Z0-9.+_-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,15}$/\n        const isEmValid = emailValidator.test(email);        \n        \n        if(!isEmValid ){\n            setAlertEM(true)\n            setTimeout(() => {\n                setAlertEM(false)\n            }, 5000);  \n            return false;          \n        }\n        \n        const pwValidator = /^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[@$!%*?&])([a-zA-Z0-9@$!%*?&]{8,12})$/\n        const isPwValid = pwValidator.test(passWord);\n\n        if(!isPwValid){\n            setAlertPW(true)\n            setTimeout(() => {\n                setAlertPW(false)\n            }, 5000); \n            return false;                   \n        }        \n       \n        rememberMe===true? saveOnLocal(email, passWord): console.log(\"No email nor password saved in the browser\");   \n                   \n        setEmail(\"\");\n        setPassWord(\"\");\n        setRememberMe(false);      \n    }   \n    \n    const saveOnLocal = (email, passWord) => {\n        \n        let data = JSON.parse(localStorage.getItem('user'));\n\n        if(data == null){\n            data = {email, passWord};\n        } else {\n            data.email=email;\n            data.passWord = passWord;\n        }\n        \n        localStorage.setItem('user', JSON.stringify(data));        \n        console.log(data);        \n        }\n    \n    //set change handlers at the parent level \n    const changeEmail = (e) => {\n        setEmail(e.target.value);\n    }\n    \n    const changePW = (e) => {\n        setPassWord(e.target.value);\n    }\n\n    const changeRM = (e) => {\n        setRememberMe(e.target.checked);\n    }\n\n    return (\n        <>\n        <LoginForm submitHandler = { submitHandler }\n                   changeEmail = { changeEmail }\n                   changePW = { changePW }\n                   changeRM = { changeRM }\n                   email= { email }\n                   passWord = { passWord }\n                   rememberMe = { rememberMe }\n                   alertEM = { alertEM }\n                   alertPW = { alertPW }\n                    />\n        {/* <div className=\"back\">\n            \n            <div className=\"card div-center\">\n                \n            <div className=\"container-lg\"> \n            <div className=\"card-body\">       \n            <ButtonMU buttonVariant={'outlined'} buttonColor={'primary'} buttonSize={'large'} />\n            <img className=\"image-center\" src={ LoginImg } alt=\"login\" /> \n\n             { alertEM &&  (<MyAlert alertType={'warning'} alertHeading={'Error!'} alertMessage={\"Please Enter A Valid Email \"}/>)}\n             { alertPW &&  (<MyAlert alertType={'danger'} alertHeading={'Incorrect!'} alertMessage={\"Please Enter A Valid Password \"}/>)}          \n\n            <form onSubmit={ submitHandler }>\n            <fieldset>\n            \n            <div className=\"form-row\">\n                <div className=\"form-group col-lg-12\">\n                    <label>\n                    Your Email\n                    </label>\n                    \n                    <input type=\"text\"\n                            name=\"email\"\n                            placeholder=\"email\"\n                            className=\"form-control\"\n                            value={email}\n                            onChange={(e) => setEmail(e.target.value)}    required                        \n                            />                    \n                </div>\n                <div className=\"form-group col-lg-12\">\n                    <label>\n                    Your Password\n                    </label>\n                    <br />\n                    <input  type=\"password\"\n                            name=\"passWord\"\n                            placeholder=\"password\"\n                            className=\"form-control\"\n                            value={passWord} \n                            onChange={(e)=>{setPassWord(e.target.value)}} required                      \n                            />               \n                </div>\n            </div>\n\n            <div className=\"form-check form-group col-lg-12 ml-3\">                    \n                    <input type=\"checkbox\" \n                           className=\"form-check-input\" \n                           checked={rememberMe} \n                           //id=\"flexCheckDefault\" \n                           onChange={(e)=>{setRememberMe(e.target.checked)}}  \n                           //in theory onClick should be used but Chrome prefers onChange here                         \n                    />\n                    <label> Remember Me </label>                     \n            </div>                \n               \n            <div className=\"for-check form-group col-lg-12\">     \n                    <button type=\"submit\" className=\"btn btn-primary btn-lg\">Login</button>\n            </div>      \n            \n            <h2 className=\"form-group col-lg-12 mt-3 text-center\">Or you can log in</h2>\n                     \n            <div className=\"col-lg-12 mt-3\" aria-label=\"buttonExample\">            \n                <button type=\"button\" className=\"btn btn-primary col-4\"><a href=\"#\"></a><FontAwesomeIcon icon={['fab', 'google']}  size=\"2x\"/> with Google</button>\n                <button type=\"button\" className=\"btn btn-warning col-4\"><a href=\"#\"></a><FontAwesomeIcon icon={['fab', 'facebook']}  size=\"2x\"/>with Facebook</button>\n                <button type=\"button\" className=\"btn btn-secondary col-4\" style={{color: \"white\"}}><a href=\"#\"></a><FontAwesomeIcon icon={['fab', 'twitter']}  size=\"2x\"/>with Twitter</button>\n           </div>               \n            \n           <div className=\"form-group col-lg-12 mt-5\">    \n                <Link to='/reset_password'><button type=\"button\" className=\"btn btn-primary btn-lg mx-auto\">Forgot Password?</button></Link>\n                <Link to='/register'><button type=\"button\" className=\"btn btn-primary btn-lg mx-auto\" > Create an Account!</button></Link> \n                <Link to='/'><button type=\"button\" className=\"btn btn-primary btn-lg mx-auto\" > Back to Homepage</button></Link> \n            </div>                \n                   \n             </fieldset>\n           </form>\n           </div>\n           </div>\n           </div>\n           </div> */}\n     </>\n    )\n}\n\nexport default Login\n","//source: https://www.npmjs.com/package/react-country-region-selector\n//npm i react-country-region-selector or yarn add react-country-region-selector\n\nimport React, { useState } from 'react';\n\n// note that you can also export the source data via CountryRegionData. It's in a deliberately concise format to \n// keep file size down\n\nimport { CountryDropdown, RegionDropdown, CountryRegionData } from 'react-country-region-selector';\n\nconst RegionCountrySelector = ({setParentCountry, setParentRegion, country, region}) => {\n\nconst selectCountry = (val) => {    \n    setParentCountry(val); \n}\n\nconst selectRegion = (val) => {    \n    setParentRegion(val);\n}\n\nreturn (    \n        <>\n        <div>\n          <CountryDropdown\n            classes = \"form-control\"\n            value={country}\n            onChange={(val) => selectCountry(val)} />\n\n          <RegionDropdown\n            classes = \"form-control\"\n            country={country}\n            value={region}\n            onChange={(val) => selectRegion(val)} />\n        </div>\n    \n        </>\n    )\n}\n// class RegionCountrySelector extends Component {\n//   constructor (props) {\n//     super(props);\n//     this.state = { country: '', region: '' };\n//   }\n\n//   selectCountry (val) {\n//     this.setState({ country: val });\n//   }\n\n//   selectRegion (val) {\n//     this.setState({ region: val });\n//   }\n\n//   render () {\n//     const { country, region } = this.state;\n//     return (\n//       <div>\n//         <CountryDropdown\n//           value={country}\n//           onChange={(val) => this.selectCountry(val)} />\n//         <RegionDropdown\n//           country={country}\n//           value={region}\n//           onChange={(val) => this.selectRegion(val)} />\n//       </div>\n//     );\n//   }\n// }\n\nexport default RegionCountrySelector","export default __webpack_public_path__ + \"static/media/sign-up.5bee1225.png\";","//source: https://www.npmjs.com/package/react-avatar-edit\n//npm i react-avatar-edit\n\n//import React, { Component } from 'react'\nimport React from 'react'\nimport Avatar from 'react-avatar-edit'\n\nexport const AvatarUploader = (props) => {\n  // const [preview, setPreview] = useState(\"\");\n  // const [savedImage, setSavedImage] = useState(\"\");\n  // const [sourceImage, setSourceImage] = useState(\"\");\n\n  //   const onClose = () => {\n  //   setPreview(null);\n  //   setSavedImage(null);\n  //   setSourceImage(null);\n  // }\n\n  // const onCrop = (preview) => {\n  //   setPreview(preview)\n  // }\n\n  // const onBeforeFileLoad = (e) => {\n  //   if(e.target.files[0].size >=71680) {\n  //     alert(\"File is too big! The maximal file size is 71860 kbs\");\n  //     e.target.value=\"\";\n  //   }\n  // }\n  \n  return (\n    <>\n       <div>\n        <Avatar\n          width={ 500 }\n          height={ 400 }\n          onCrop={ props.onCrop }\n          onClose={ props.onClose }\n          onBeforeFileLoad={ props.onBeforeFileLoad }\n          // src={this.state.src}\n        />\n        {props.preview ? <img src={ props.preview} alt=\"Preview\" /> : null}\n        {props.savedImage ? <img src={ props.savedImage} alt=\"savedImages\" /> : null}\n      </div>\n    </>\n  )\n}\n\n// class AvatarUploader extends Component {\n \n//   constructor(props) {\n//     super(props)\n//     const src = \n//     this.state = {\n//       preview: null,\n//       savedImage: null,\n//       //src\n//     }\n//     this.onCrop = this.onCrop.bind(this)\n//     this.onClose = this.onClose.bind(this)\n//     this.onBeforeFileLoad = this.onBeforeFileLoad.bind(this)\n//   }\n  \n//   onClose() {\n//     this.setState({preview: null,savedImage:this.state.preview})\n//   }\n  \n//   onCrop(preview) {\n//     this.setState({preview})\n//   }\n \n//   onBeforeFileLoad(e) {\n//     if(e.target.files[0].size > 71680){\n//       alert(\"File is too big!\");\n//       e.target.value = \"\";\n//     };\n//   }\n  \n//   render () {\n//     return (\n//       <div>\n//         <Avatar\n//           width={390}\n//           height={295}\n//           onCrop={this.onCrop}\n//           onClose={this.onClose}\n//           onBeforeFileLoad={this.onBeforeFileLoad}\n//           // src={this.state.src}\n//         />\n//         {this.state.preview ? <img src={this.state.preview} alt=\"Preview\" /> : null}\n//         {this.state.savedImage ? <img src={this.state.savedImage} alt=\"savedImages\" /> : null}\n//       </div>\n//     )\n//   }\n// }\n\nexport default AvatarUploader","import { useState, useEffect } from 'react'\nimport { Link } from \"react-router-dom\"\n\nimport MyAlert from '../layout/Alert';\nimport ButtonMU from '../layout/ButtonMU'\n\nimport SignUpImg from '../asset/sign-up.png';\nimport '../userAccount.css';\n\n//these two are third party MIT-licensed packages, see the source page info in the components themselves\nimport RegionCountrySelector from '../selector/RegionCountrySelector'\nimport AvatarUploader from '../upload-edit/AvatarUploader'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport {\n    //faGithub,\n    faGoogle,\n    faFacebook,\n    faTwitter\n  } from '@fortawesome/free-brands-svg-icons';\n\n  library.add(\n    //faGithub,\n    faGoogle,\n    faFacebook,\n    faTwitter\n  );\n\nconst RegistrationForm = (props) => {\n\n    // const [country, setCountry] = useState(\"\"); //for RegionCountrySelector package\n    // const [region, setRegion] = useState(\"\"); //for RegionCountrySelector package   \n    \n    // const clearUp = () => {\n    //      setCountry(\"\");\n    //      setRegion(\"\");  \n    // }\n\n    // async const waitSubmitHandler = () => {\n    //     props.submitHandler? await clearUp(): console.log(\"wait\");        \n    // }\n\n    // waitSubmitHandler();\n\n    //  useEffect (()=> {               \n    //     setCountry(\"\");\n    //     setRegion(\"\");               \n    // }, [props.submitHandler]);\n\n    return (\n        <>\n            <div className=\"back\">\n            \n            <div className=\"card div-center\">                \n            <div className=\"container-xl fluid\">\n            <div className=\"card-body\">\n            <ButtonMU buttonVariant={'outlined'} buttonColor={'primary'} buttonSize={'large'} />                           \n            {/* <br />\n            <img className=\"image-center\" src={ SignUpImg } alt=\"sign-up\" />  */}\n            <br/>\n            <form onSubmit={ props.submitHandler } action=\"#\">\n\n                <div className=\"form-row\">\n                <div className=\"form-group col-lg-6\">\n                    <label>\n                    First Name\n                    </label>\n                    \n                    <input type=\"text\"\n                            name=\"firstName\"\n                            value={props.firstName}\n                            placeholder=\"your first name\"\n                            className=\"form-control\"\n                            onChange={ props.changeFirstName }                            \n                            required\n                            />                    \n                </div>\n\n                <div className=\"form-group col-lg-6\">\n                    <label>\n                    Last Name\n                    </label>\n                    \n                    <input type=\"text\"\n                            name=\"lastName\"\n                            value={props.lastName}\n                            placeholder=\"your last name\"\n                            className=\"form-control\"\n                            onChange={props.changeLastName}\n                            required\n                            />                    \n                </div>\n\n                <div className=\"form-group col-lg-12\">\n                    <label>\n                    Country\n                    </label>                    \n                    <RegionCountrySelector country={props.country} region={props.region} setParentCountry={val =>props.changeCountry(val)} setParentRegion={val => props.changeRegion(val)}/>               \n                </div>          \n\n                <div className=\"form-group col-lg-7\">\n                    <label>\n                    Email\n                    </label>\n                    \n                    <input type=\"text\"\n                            name=\"email\"\n                            value={props.email}\n                            placeholder=\"your email address\"\n                            className=\"form-control\"\n                            onChange={props.changeEmail}\n                            required\n                            />                    \n                </div>                              \n\n                <div className=\"form-group col-lg-5\">\n                    <label>\n                    User Name\n                    </label>\n                    \n                    <input type=\"text\"\n                            name=\"username\"\n                            value={props.userName}\n                            placeholder=\"unique, no space\"\n                            className=\"form-control\"\n                            onChange={props.changeUserName}\n                            />                    \n                </div>\n               \n                <div className=\"form-group col-lg-12\">\n                    <label>\n                    Set Password (8-12 characters, 1 uppercase, 1 lowercase, 1 number, and 1 special character. Whitespace MAY NOT be used)\n                    </label>\n                    <br />\n                    <input  type=\"password\"\n                            name=\"password\"\n                            value={props.passWord}\n                            placeholder=\"Please ensure you follow the password setting request\"\n                            className=\"form-control\"\n                            onChange={props.changePassWord}\n                            required\n                            />               \n                </div>               \n\n                <div className=\"form-group col-lg-12\">\n                    <label>\n                    Confirm Password\n                    </label>\n                    <br />\n                    <input  type=\"password\"\n                            name=\"confirmPassword\"\n                            value={props.confirmPW}\n                            placeholder=\"Please confirm your password\"\n                            className=\"form-control\"\n                            onChange={props.changeConfirmPW}\n                            required\n                            />               \n                </div>               \n\n                <div className=\"form-group col-lg-12\">\n                <label>Choose Your Avatar (Optional)</label>\n                <div>\n                    <AvatarUploader onClose = {props.onClose} onCrop={props.onCrop} onBeforeFileLoad={props.onBeforeFileLoad} preview={props.preview} savedImage={props.savedImage} />\n                </div>\n                </div>\n                \n                { props.alertEM &&  (<MyAlert alertType={'warning'} alertHeading={'Error!'} alertMessage={\"Please Enter A Valid Email \"}/>)}\n                { props.alertPW &&  (<MyAlert alertType={'danger'} alertHeading={'Error}!'} alertMessage={\"Please Enter A Valid Password \"}/>)} \n                { props.alertPWCheck && (<MyAlert alertType={'warning'} alertHeading={'Error!'} alertMessage={\"Inconsistent Password!\"}/>)}                           \n\n            <div className=\"form-group col-lg-12\">  \n            <button type=\"submit\" className=\"btn btn-primary btn-lg\">Submit</button>\n            </div>                        \n\n            <h2 className=\"form-group col-lg-12 mt-3 text-center\">Or you can sign up</h2>\n\n            <div className=\"col-lg-12 mt-3\" aria-label=\"buttonExample\">                \n                <button type=\"button\" className=\"btn btn-primary col-4\"><a href=\"#\"></a><FontAwesomeIcon icon={['fab', 'google']}  size=\"2x\"/> with Google</button>\n                <button type=\"button\" className=\"btn btn-warning col-4\"><a href=\"#\"></a><FontAwesomeIcon icon={['fab', 'facebook']}  size=\"2x\"/>with Facebook</button>\n                <button type=\"button\" className=\"btn btn-secondary col-4\" style={{color: \"white\"}}><a href=\"#\"></a><FontAwesomeIcon icon={['fab', 'twitter']}  size=\"2x\"/>with Twitter</button>\n            </div> \n            \n            <div className=\"form-group col-lg-12 mt-3\">   \n            <Link to='/login'><button type=\"button\" className=\"btn btn-primary btn-lg mt-3 mr-3\">Back to Login</button></Link>\n            <Link to='/'><button type=\"button\" className=\"btn btn-primary btn-lg mt-3\"> Back to Homepage</button></Link> \n            </div>                                \n            </div>           \n            </form>\n            </div> \n            </div>\n            </div>\n            </div>            \n        </>\n    )\n}\n\nexport default RegistrationForm\n","import React, { useState } from 'react'\nimport RegistrationForm from './forms/RegistrationForm'\n\n// import { Link } from \"react-router-dom\"\n\n// import MyAlert from './layout/Alert';\n// import ButtonMU from './layout/ButtonMU'\n\n// import SignUpImg from './asset/sign-up.png';\n// import \"../userAccount/userAccount.css\";\n\n// //these two are third party MIT-licensed packages, see the source page info in the components themselves\n// import RegionCountrySelector from '../userAccount/selector/RegionCountrySelector'\n// import AvatarUploader from '../userAccount/upload-edit/AvatarUploader'\n\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n// import { library } from '@fortawesome/fontawesome-svg-core';\n// import {\n//     //faGithub,\n//     faGoogle,\n//     faFacebook,\n//     faTwitter\n//   } from '@fortawesome/free-brands-svg-icons';\n\n//   library.add(\n//     //faGithub,\n//     faGoogle,\n//     faFacebook,\n//     faTwitter\n//   );\n\nconst Register = () => {\n     \n     const [firstName, setFirstName] = useState(\"\");\n     const [lastName, setLastName] = useState(\"\"); \n     const [email, setEmail] = useState(\"\");     \n     const [userName, setUserName] = useState(\"\");\n     const [passWord, setPassWord] = useState(\"\");\n     const [confirmPW, setConfirmPW] = useState(\"\"); \n\n     const [country, setCountry] = useState(\"\"); //for RegionCountrySelector package\n     const [region, setRegion] = useState(\"\"); //for RegionCountrySelector pack\n     \n     const [preview, setPreview] = useState(\"\");\n     const [savedImage, setSavedImage] = useState(\"\");\n    \n     const [alertEM, setAlertEM] = useState (false);  \n     const [alertPW, setAlertPW] = useState (false);\n     const [alertPWCheck, setAlertPWCheck] = useState (false);  \n    \n     const submitHandler = (e) => {\n         e.preventDefault();  \n        \n        //email validator source: \n        //At least 8 characters long;\n        //One lowercase, one uppercase, one number and one special character;\n        //No whitespaces. use https://regexr.com/ and https://regex101.com/ for writing up and testing regex\n        //source: https://stackoverflow.com/questions/19605150/regex-for-password-must-contain-at-least-eight-characters-at-least-one-number-a (section 6)\n        \n        const emailValidator = /^[a-zA-Z0-9.+_-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,15}$/\n        const isEmValid = emailValidator.test(email);        \n        \n        if(!isEmValid ){\n            setAlertEM(true)\n            setTimeout(() => {\n                setAlertEM(false)\n            }, 5000); \n            return false;           \n        }\n        \n        const pwValidator = /^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[@$!%*?&])([a-zA-Z0-9@$!%*?&]{8,12})$/\n        const isPwValid = pwValidator.test(passWord);\n\n        if(!isPwValid){\n            setAlertPW(true)\n            setTimeout(() => {\n                setAlertPW(false)\n            }, 5000); \n            return false;                    \n        }        \n       \n        if ((isEmValid && isPwValid) && (passWord!==confirmPW)) {\n            setAlertPWCheck(true)\n            setTimeout(() => {\n                setAlertPWCheck(false)\n            }, 5000); \n            return false;\n        }\n\n         setFirstName(\"\");\n         setLastName(\"\");\n         setCountry(\"\");\n         setRegion(\"\");\n         setEmail(\"\");\n         setUserName(\"\");\n         setPassWord(\"\");\n         setConfirmPW(\"\");\n         setPreview(null);\n         setSavedImage(null);        \n    }    \n\n    const changeFirstName = (e) => {\n        setFirstName(e.target.value);\n    }\n\n    const changeLastName = (e) => {\n        setLastName(e.target.value);\n    }\n\n    const changeEmail = (e) => {\n        setEmail(e.target.value);\n    }\n\n    const changeUserName = (e) => {\n        setUserName(e.target.value);\n    }\n\n    const changePassWord = (e) => {\n        setPassWord(e.target.value);\n    }\n\n    const changeConfirmPW = (e) => {\n        setConfirmPW(e.target.value);\n    }  \n\n    const changeCountry = (val) => {\n        setCountry(val)\n    }\n\n    const changeRegion = (val) => {\n        setRegion(val)\n    }\n\n    const onClose = () => {\n        setPreview(null);\n        setSavedImage(preview);    \n      }\n    \n    const onCrop = (preview) => {\n        setPreview(preview);\n        setSavedImage(null);\n      }\n    \n    const onBeforeFileLoad = (e) => {\n        if(e.target.files[0].size >=71680) {\n          alert(\"File is too big! The maximal file size is 71860 kbs\");\n          e.target.value=\"\";\n        }\n      }\n    \n\n     return (\n        <>\n        <RegistrationForm submitHandler = { submitHandler }\n                          changeFirstName = { changeFirstName}\n                          changeLastName = { changeLastName }\n                          changeEmail = { changeEmail }\n                          changeUserName = { changeUserName }\n                          changePassWord = { changePassWord }\n                          changeConfirmPW = { changeConfirmPW } \n                          changeCountry = {changeCountry} \n                          changeRegion = {changeRegion}\n                          firstName = { firstName }\n                          lastName = { lastName }\n                          email = { email }\n                          userName = { userName }\n                          country = {country}\n                          region = {region}\n                          passWord = { passWord }\n                          confirmPW = { confirmPW }\n                          alertEM = { alertEM }\n                          alertPW = { alertPW }\n                          alertPWCheck = { alertPWCheck }\n                          \n                          onClose = {onClose}\n                          onCrop = {onCrop}\n                          onBeforeFileLoad ={onBeforeFileLoad}\n                          preview={preview}\n                          savedImage={savedImage}\n                />\n        {/* <div className=\"back\">\n            \n            <div className=\"card div-center\">                \n            <div className=\"container-lg fluid\">\n            <div className=\"card-body\">\n            <ButtonMU buttonVariant={'outlined'} buttonColor={'primary'} buttonSize={'large'} />                           \n            <br />\n            <img className=\"image-center\" src={ SignUpImg } alt=\"sign-up\" /> \n            <br/>\n            <form onSubmit={ submitHandler } action=\"#\">\n\n                <div className=\"form-row\">\n                <div className=\"form-group col-lg-6\">\n                    <label>\n                    First Name\n                    </label>\n                    \n                    <input type=\"text\"\n                            name=\"firstName\"\n                            value={firstName}\n                            placeholder=\"your first name\"\n                            className=\"form-control\"\n                            onChange={(e)=>setFirstName(e.target.value)}                            \n                            required\n                            />                    \n                </div>\n\n                <div className=\"form-group col-lg-6\">\n                    <label>\n                    Last Name\n                    </label>\n                    \n                    <input type=\"text\"\n                            name=\"lastName\"\n                            value={lastName}\n                            placeholder=\"your last name\"\n                            className=\"form-control\"\n                            onChange={(e)=>setLastName(e.target.value)}\n                            required\n                            />                    \n                </div>\n\n                <div className=\"form-group col-lg-12\">\n                    <label>\n                    Country\n                    </label>                    \n                    <RegionCountrySelector country={country} region={region} setParentCountry={val =>setCountry(val)} setParentRegion={val => setRegion(val)}/>               \n                </div>          \n\n                <div className=\"form-group col-lg-7\">\n                    <label>\n                    Email\n                    </label>\n                    \n                    <input type=\"text\"\n                            name=\"email\"\n                            value={email}\n                            placeholder=\"your email address\"\n                            className=\"form-control\"\n                            onChange={(e)=>setEmail(e.target.value)}\n                            required\n                            />                    \n                </div>                              \n\n                <div className=\"form-group col-lg-5\">\n                    <label>\n                    User Name\n                    </label>\n                    \n                    <input type=\"text\"\n                            name=\"username\"\n                            value={userName}\n                            placeholder=\"unique, no space\"\n                            className=\"form-control\"\n                            onChange={(e)=>setUserName(e.target.value)}\n                            />                    \n                </div>\n               \n                <div className=\"form-group col-lg-12\">\n                    <label>\n                    Set Password (8-12 characters, 1 uppercase, 1 lowercase, 1 number, and 1 special character. Whitespace MAY NOT be used)\n                    </label>\n                    <br />\n                    <input  type=\"password\"\n                            name=\"password\"\n                            value={passWord}\n                            placeholder=\"Please ensure you follow the password setting request\"\n                            className=\"form-control\"\n                            onChange={(e)=>{setPassWord(e.target.value)}}\n                            required\n                            />               \n                </div>               \n\n                <div className=\"form-group col-lg-12\">\n                    <label>\n                    Confirm Password\n                    </label>\n                    <br />\n                    <input  type=\"password\"\n                            name=\"confirmPassword\"\n                            value={confirmPW}\n                            placeholder=\"Please confirm your password\"\n                            className=\"form-control\"\n                            onChange={(e)=>setConfirmPW(e.target.value)}\n                            required\n                            />               \n                </div>               \n\n                <div className=\"form-group col-lg-12\">\n                <label>Choose Your Avatar (Optional)</label>\n                <div>\n                    <AvatarUploader />\n                </div>\n                </div>\n                \n                { alertEM &&  (<MyAlert alertType={'warning'} alertHeading={'Error!'} alertMessage={\"Please Enter A Valid Email \"}/>)}\n                { alertPW &&  (<MyAlert alertType={'danger'} alertHeading={'Error!'} alertMessage={\"Please Enter A Valid Password \"}/>)} \n                { alertPWCheck && (<MyAlert alertType={'warning'} alertHeading={'Error!'} alertMessage={\"Inconsistent Password!\"}/>)}                           \n\n            <div className=\"form-group col-lg-12\">  \n            <button type=\"submit\" value=\"Submit\" className=\"btn btn-primary btn-lg\">Submit</button>\n            </div>                        \n\n            <h2 className=\"form-group col-lg-12 mt-3 text-center\">Or you can sign up</h2>\n            <div className=\"col-lg-12\" aria-label=\"buttonExample\">                \n                <button type=\"button\" className=\"btn btn-primary col-4\"><a href=\"#\"></a><FontAwesomeIcon icon={['fab', 'google']}  size=\"2x\"/> with Google</button>\n                <button type=\"button\" className=\"btn btn-warning col-4\"><a href=\"#\"></a><FontAwesomeIcon icon={['fab', 'facebook']}  size=\"2x\"/>with Facebook</button>\n                <button type=\"button\" className=\"btn btn-secondary col-4\" style={{color: \"white\"}}><a href=\"#\"></a><FontAwesomeIcon icon={['fab', 'twitter']}  size=\"2x\"/>with Twitter</button>\n            </div> \n            \n            <div className=\"form-group col-lg-12 mt-3\">   \n            <Link to='/login'><button type=\"button\" className=\"btn btn-primary btn-lg mt-3 mr-3\">Back to Login</button></Link>\n            <Link to='/'><button type=\"button\" className=\"btn btn-primary btn-lg mt-3\"> Back to Homepage</button></Link> \n            </div>                                \n            </div>           \n            </form>\n            </div> \n            </div>\n            </div>\n            </div>           */}\n        </>\n    )\n}\n\nexport default Register","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport  MyAlert  from '../layout/Alert';\nimport ResetPwImg from '../asset/password-forgot.png'\nimport \"../userAccount.css\"\n\nconst ResetPWForm = (props) => {\n    return (\n        <>\n            <div className=\"back\">\n            \n            <div className=\"card div-center\">                \n            <div className=\"container-lg fluid\">\n            <div className=\"card-body\">        \n            {/* <br />            \n            <img className=\"image-center mt-5\" src={ ResetPwImg } alt=\"login\" />             */}\n            <br />               \n            <form onSubmit={ props.submitHandler }>       \n            <div className=\"form-row\">\n                <div className=\"form-group col-lg-12\">\n                    <label>\n                    Enter your email and we will send you a link to get back into your account\n                    </label>\n                    \n                    <input type=\"text\"\n                            name=\"email\"\n                            placeholder=\"your email account\"\n                            className=\"form-control\"\n                            onChange={ props.changeEmail }\n                            required\n                            />  \n                    <div className=\"mt-3\">  \n                    <button type=\"submit\" className=\"btn btn-lg btn-primary\">Reset</button>\n                    </div>\n\n                    { props.alertEM && (<MyAlert alertType={'danger'} alertHeading={'Error!'} alertMessage={\"Please Enter A Valid Email \"}/>)}\n                    \n                    <Link to='/login'><button type=\"button\" className=\"btn btn-lg btn-primary mt-5 mr-3\">Back to Login</button></Link>                \n                    <Link to='/'><button type=\"button\" className=\"btn btn-primary btn-lg mt-5\"> Back to Homepage</button></Link> \n                </div>\n                \n            </div>\n            </form> \n            </div>\n            </div>\n            </div>\n            </div>\n        </>\n    )\n}\n\nexport default ResetPWForm\n","export default __webpack_public_path__ + \"static/media/password-forgot.9ef803f6.png\";","import React, { useState } from 'react'\nimport ResetPWForm from '../userAccount/forms/ResetPWForm'\n// import { Link } from 'react-router-dom'\n// import  MyAlert  from './layout/Alert';\n// import ResetPwImg from './asset/password-forgot.png'\nimport \"../userAccount/userAccount.css\"\n\nconst ResetPW = () => {\n    const [email, setEmail] = useState (\"\"); \n    const [alertEM, setAlertEM] = useState(false);   \n\n    const submitHandler = (e) => {         \n        e.preventDefault();\n\n        const emailValidator = /^[a-zA-Z0-9.+_-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,15}$/\n        const isEmValid = emailValidator.test(email);        \n        \n        if(!isEmValid){\n            setAlertEM(true)\n            setTimeout(() => {\n                setAlertEM(false)\n            }, 5000);\n            return false;           \n        }\n        setEmail(\"\");\n    }\n\n    const changeEmail = (e) => {\n        setEmail(e.target.value);\n    }\n\n    return (\n        <>\n        <ResetPWForm submitHandler = { submitHandler }\n                     changeEmail = { changeEmail }\n                     email = {email}\n                     alertEM = {alertEM}        \n        />       \n        {/* <div className=\"back\">\n            \n            <div className=\"card div-center\">                \n            <div className=\"container-lg\">\n            <div className=\"card-body\">                    \n                        \n            <img className=\"image-center mt-5\" src={ ResetPwImg } alt=\"login\" />            \n                           \n            <form onSubmit={ submitHandler }>       \n            <div className=\"form-row\">\n                <div className=\"form-group col-lg-12\">\n                    <label>\n                    Enter your email and we will send you a link to get back into your account\n                    </label>\n                    \n                    <input type=\"text\"\n                            name=\"email\"\n                            placeholder=\"your email account\"\n                            className=\"form-control\"\n                            onChange={(e)=>setEmail(e.target.value)}                         \n                            />  \n                    <div className=\"mt-3\">  \n                    <button type=\"submit\" className=\"btn btn-lg btn-primary\">Reset</button>\n                    </div>\n\n                    { alertEM && (<MyAlert alertType={'danger'} alertHeading={'Error!'} alertMessage={\"Please Enter A Valid Email \"}/>)}\n                    \n                    <Link to='/login'><button type=\"button\" className=\"btn btn-lg btn-primary mt-5 mr-3\">Back to Login</button></Link>                \n                    <Link to='/'><button type=\"button\" className=\"btn btn-primary btn-lg mt-5\"> Back to Homepage</button></Link> \n                </div>\n                \n            </div>\n            </form> \n            </div>\n            </div>\n            </div>\n            </div> */}\n        </>\n    ) \n}\n\nexport default ResetPW","//npm install --save react-background-slideshow\n//import \"bootstrap/dist/css/bootstrap.min.css\";\n//import { Dropdowns } from \"react-bootstrap\";\n//import useMediaQuery from '@material-ui/core/useMediaQuery'\nimport React from \"react\";\nimport Header from \"./Components/Header/Header\";\nimport Main from \"./Components/Main\";\nimport BackgroundSlideshow from \"react-background-slideshow\";\nimport Image2 from \"./Components/img/priscilla-du-preez.jpg\";\nimport Image3 from \"./Components/img/heylagostechie.jpg\";\nimport Image4 from \"./Components/img/alexis-brown-omea.jpg\";\nimport About from \"./Components/About\";\nimport Team from \"./Components/Team\";\nimport Footer from \"./Components/Footer\";\n//npm install react-router-dom\nimport Login from \"./Components/userAccount/Login\";\nimport Register from \"./Components/userAccount/Register\";\nimport ResetPW from \"./Components/userAccount/ResetPW\";\nimport { BrowserRouter as Router, Route, Switch, Link } from \"react-router-dom\";\n\nimport \"./App.scss\";\n\n/* import \"bootstrap/dist/css/bootstrap.min.css\"; */\n/* import { Dropdowns } from \"react-bootstrap\"; */ /* import useMediaQuery from '@material-ui/core/useMediaQuery';\n\n */ const App = () => {\n  return (\n    <Router>\n      <div className=\"wrapper\">\n        <Header />\n        <Main />\n        <div className=\"slightContainer\">\n          <BackgroundSlideshow\n            images={[Image2, Image3, Image4]}\n          ></BackgroundSlideshow>\n        </div>\n        <About />\n        <Team />\n        <Footer />\n      </div>\n      <Switch>\n        <Route exact path=\"/login\" component={Login} />\n        <Route exact path=\"/register\" component={Register} />\n        <Route exact path=\"/reset_password\" component={ResetPW} />\n      </Switch>\n    </Router>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nimport \"./index.scss\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}